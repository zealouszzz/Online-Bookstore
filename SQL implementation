SQL implementation
1.
Show the subject names of books supplied by *supplier2*.
SELECT subject.CategoryName from book JOIN supplier
ON book.SupplierID=supplier.SupplierID JOIN subject
ON book.SubjectID=subject.SubjectID
WHERE supplier.CompanyName='supplier2'

2.
Show the name and price of the most expensive book supplied by *supplier3*.
SELECT book.Title, book.UnitPrice From book WHERE 
book.UnitPrice=(SELECT MAX(UnitPrice) FROM book JOIN supplier
ON book.SupplierID=supplier.SupplierID 
WHERE supplier.CompanyName='supplier3')

3.
Show the unique names of all books ordered by *lastname1 firstname1*.
SELECT DISTINCT(Title) FROM book INNER JOIN order_detail 
ON book.BookID=order_detail.BookID INNER JOIN orders
ON order_detail.OrderID=orders.OrderID INNER JOIN customer
ON orders.CustomerID=customer.CustomerID
WHERE customer.FirstName='firstname1'

4.
Show the title of books which have more than 10 units in stock.
SELECT Title FROM book
WHERE Quantity>10

5.
Show the total price *lastname1 firstname1* has paid for the books.
SELECT SUM(order_detail.Quantity*book.UnitPrice) FROM book, order_detail, orders, customer
WHERE order_detail.BookID = book.BookID AND 
orders.OrderID = order_detail.OrderID AND 
customer.CustomerID = orders.CustomerID AND 
customer.FirstName = "firstname1" AND 
customer.LastName ="lastname1";

6.
Show the names of the customers who have paid less than $80 in totals.
SELECT FirstName, LastName from 
(SELECT customer.FirstName as FirstName, customer.LastName as LastName, SUM(order_detail.Quantity*book.UnitPrice) AS TotalPrice FROM 
book, order_detail, orders, customer WHERE 
order_detail.BookID = book.BookID AND 
orders.OrderID = order_detail.OrderID AND 
customer.CustomerID = orders.CustomerID GROUP BY 
customer.CustomerID HAVING TotalPrice < 80)as temp;

7.
Show the name of books supplied by *supplier2*.
SELECT Title from book inner join supplier
on book.SupplierID=supplier.SupplierID
where supplier.CompanyName='supplier2'

8.
Show the total price each customer paid and their names.  List the result in descending price.
SELECT customer.FirstName, customer.LastName, 
SUM(order_detail.Quantity*book.UnitPrice) AS TotalPrice FROM 
book, order_detail, orders, customer  WHERE 
order_detail.BookID = book.BookID AND 
orders.OrderID = order_detail.OrderID AND 
customer.CustomerID = orders.CustomerID GROUP BY 
customer.CustomerID ORDER BY TotalPrice DESC

9.
Show the names of all the books shipped on 08/04/2016 and their shippers' names.
SELECT book.Title, shipper.ShpperName FROM 
book, shipper, orders, order_detail
WHERE book.BookID = order_detail.BookID AND 
order_detail.OrderID = orders.OrderID AND 
orders.ShipperID = shipper.ShipperID AND 
orders.ShippedDate = "2016-08-04";

10.
Show the unique names of all the books *lastname1 firstname1* and *lastname4 firstname4* *both* ordered.
SELECT Distinct book.Title FROM book, orders, order_detail, customer WHERE 
book.BookID = order_detail.BookID AND order_detail.OrderID = orders.OrderID AND 
orders.CustomerID = customer.CustomerID AND customer.FirstName='firstname1' AND customer.LastName='lastname1' AND book.BookID in 
(SELECT book.bookID FROM book, orders, order_detail, customer WHERE 
book.BookID = order_detail.BookID AND order_detail.OrderID = orders.OrderID AND 
orders.CustomerID = customer.CustomerID AND 
customer.FirstName='firstname4' AND customer.LastName='lastname4');

11.
Show the names of all the books *lastname6 firstname6* was responsible for.
SELECT book.Title FROM book, employee, orders, order_detail WHERE 
order_detail.BookID = book.BookID AND 
order_detail.OrderID = orders.OrderID AND 
orders.EmployeeID = employee.EmployeeID AND 
employee.FirstName = 'firstname6' AND LastName='lastname6';

12.
Show the names of all the ordered books and their total quantities.  List the result in ascending quantity.
SELECT BookID, TotalNum from 
(SELECT book.BookID, SUM(order_detail.Quantity) AS TotalNum
FROM book, order_detail WHERE
book.BookID=order_detail.BookID 
GROUP BY BookID 
ORDER BY TotalNum ASC) as temp

13.
Show the names of the customers who ordered at least 2 books.
SELECT FirstName, LastName from 
(SELECT customer.FirstName as FirstName, customer.LastName as LastName, 
SUM(order_detail.Quantity) AS TotalNum FROM 
customer, orders, order_detail WHERE 
order_detail.OrderID = orders.orderID AND 
orders.CustomerID = customer.CustomerID GROUP BY 
customer.CustomerID HAVING TotalNum >= 2) as Temp;

14.
Show the name of the customers who have ordered at least a book in *category3* or *category4* and the book names.
SELECT customer.FirstName, customer.LastName, book.Title FROM 
customer, subject, book, orders, order_detail WHERE 
orders.OrderID = order_detail.OrderID AND 
book.BookID = order_detail.BookID AND 
orders.CustomerID = customer.CustomerID AND 
book.SubjectID = subject.SubjectID AND 
(subject.CategoryName = 'category3' OR subject.CategoryName = 'category4');

15.
Show the name of the customer who has ordered at least one book written by *author1*.
SELECT customer.FirstName, customer.LastName FROM 
orders, order_detail, customer, book WHERE 
orders.OrderID = order_detail.OrderID AND 
orders.CustomerID = customer.CustomerID AND 
order_detail.BookID = book.BookID AND 
book.Author = 'author1' GROUP BY 
customer.FirstName 

16.
Show the name and total sale (price of orders) of each employee.
SELECT employee.FirstName, employee.LastName, 
SUM(book.UnitPrice * order_detail.Quantity) AS TotalPrice FROM 
book, employee, orders, order_detail WHERE 
orders.OrderID = order_detail.OrderID AND 
book.BookID = order_detail.BookID AND 
orders.EmployeeID = employee.EmployeeID GROUP BY employee.EmployeeID;

17.
Show the book names and their respective quantities for open orders (the orders which have not been shipped) at midnight 08/04/2016.
SELECT book.Title, sum(order_detail.Quantity) as TotalNum FROM 
book, orders, order_detail WHERE 
book.BookID = order_detail.BookID AND 
orders.OrderID = order_detail.OrderID AND 
orders.ShippedDate > "2016-08-04" group by book.Title;

18.
Show the names of customers who have ordered more than 1 book and the corresponding quantities.  List the result in the descending quantity.
SELECT customer.FirstName, customer.LastName, SUM(order_detail.Quantity) AS TotalNum FROM 
customer, orders, order_detail WHERE 
order_detail.OrderID = orders.orderID AND 
orders.CustomerID = customer.CustomerID GROUP BY 
customer.CustomerID HAVING TotalNum > 1 ORDER BY TotalNum DESC

19.
Show the names of customers who have ordered more than 3 books and their respective telephone numbers.
SELECT customer.FirstName, customer.LastName, customer.Phone, 
SUM(order_detail.Quantity) AS TotalNum FROM 
customer, orders, order_detail WHERE 
order_detail.OrderID = orders.orderID AND 
orders.CustomerID = customer.CustomerID GROUP BY 
customer.CustomerID HAVING TotalNum >3
